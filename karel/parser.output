   0  $accept : %entry% $end

   1  prog : BEGIN_PROG BEGIN_EXEC stmts_opt END_EXEC END_PROG

   2  stmts_opt :
   3            | stmts

   4  stmts : stmt
   5        | stmts SEMI stmt
   6        | stmts SEMI

   7  stmt : simple_stmt

   8  test : FRONT_IS_CLEAR
   9       | FRONT_IS_BLOCKED
  10       | LEFT_IS_CLEAR
  11       | LEFT_IS_BLOCKED
  12       | RIGHT_IS_CLEAR
  13       | RIGHT_IS_BLOCKED
  14       | NEXT_TO_A_BEEPER
  15       | NOT_NEXT_TO_A_BEEPER
  16       | FACING_NORTH
  17       | NOT_FACING_NORTH
  18       | FACING_SOUTH
  19       | NOT_FACING_SOUTH
  20       | FACING_EAST
  21       | NOT_FACING_EAST
  22       | FACING_WEST
  23       | NOT_FACING_WEST

  24  simple_stmt : TURN_LEFT
  25              | TURN_OFF
  26              | MOVE
  27              | PICK_BEEPER
  28              | PUT_BEEPER

  29  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (29)

	BEGIN_PROG  shift 3
	.  error

	prog  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	prog : BEGIN_PROG . BEGIN_EXEC stmts_opt END_EXEC END_PROG  (1)

	BEGIN_EXEC  shift 5
	.  error


state 4
	%entry% : '\001' prog .  (29)

	.  reduce 29


state 5
	prog : BEGIN_PROG BEGIN_EXEC . stmts_opt END_EXEC END_PROG  (1)
	stmts_opt : .  (2)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	PICK_BEEPER  shift 9
	PUT_BEEPER  shift 10
	END_EXEC  reduce 2

	stmts_opt  goto 11
	stmts  goto 12
	stmt  goto 13
	simple_stmt  goto 14


state 6
	simple_stmt : MOVE .  (26)

	.  reduce 26


state 7
	simple_stmt : TURN_LEFT .  (24)

	.  reduce 24


state 8
	simple_stmt : TURN_OFF .  (25)

	.  reduce 25


state 9
	simple_stmt : PICK_BEEPER .  (27)

	.  reduce 27


state 10
	simple_stmt : PUT_BEEPER .  (28)

	.  reduce 28


state 11
	prog : BEGIN_PROG BEGIN_EXEC stmts_opt . END_EXEC END_PROG  (1)

	END_EXEC  shift 15
	.  error


state 12
	stmts_opt : stmts .  (3)
	stmts : stmts . SEMI stmt  (5)
	stmts : stmts . SEMI  (6)

	SEMI  shift 16
	END_EXEC  reduce 3


state 13
	stmts : stmt .  (4)

	.  reduce 4


state 14
	stmt : simple_stmt .  (7)

	.  reduce 7


state 15
	prog : BEGIN_PROG BEGIN_EXEC stmts_opt END_EXEC . END_PROG  (1)

	END_PROG  shift 17
	.  error


state 16
	stmts : stmts SEMI . stmt  (5)
	stmts : stmts SEMI .  (6)

	MOVE  shift 6
	TURN_LEFT  shift 7
	TURN_OFF  shift 8
	PICK_BEEPER  shift 9
	PUT_BEEPER  shift 10
	END_EXEC  reduce 6
	SEMI  reduce 6

	stmt  goto 18
	simple_stmt  goto 14


state 17
	prog : BEGIN_PROG BEGIN_EXEC stmts_opt END_EXEC END_PROG .  (1)

	.  reduce 1


state 18
	stmts : stmts SEMI stmt .  (5)

	.  reduce 5


Rules never reduced:
	test : FRONT_IS_CLEAR  (8)
	test : FRONT_IS_BLOCKED  (9)
	test : LEFT_IS_CLEAR  (10)
	test : LEFT_IS_BLOCKED  (11)
	test : RIGHT_IS_CLEAR  (12)
	test : RIGHT_IS_BLOCKED  (13)
	test : NEXT_TO_A_BEEPER  (14)
	test : NOT_NEXT_TO_A_BEEPER  (15)
	test : FACING_NORTH  (16)
	test : NOT_FACING_NORTH  (17)
	test : FACING_SOUTH  (18)
	test : NOT_FACING_SOUTH  (19)
	test : FACING_EAST  (20)
	test : NOT_FACING_EAST  (21)
	test : FACING_WEST  (22)
	test : NOT_FACING_WEST  (23)


34 terminals, 8 nonterminals
30 grammar rules, 19 states
